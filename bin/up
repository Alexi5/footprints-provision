#!/bin/bash

set -euo pipefail

if ! [ -x "$(command -v terraform)" ]; then
  echo 'Error: Terraform is not installed. Download it here: https://www.terraform.io/downloads.html' >&2
  exit 1
fi

if ! [ -x "$(command -v aws)" ]; then
  echo 'Error: The AWS CLI tool is not installed. Download it here: https://docs.aws.amazon.com/cli/latest/userguide/installing.html' >&2
  exit 1
fi

if ! [ -x "$(command -v ansible-playbook)" ]; then
  echo 'Error: Ansible is not installed. Download it here: https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html' >&2
  exit 1
fi

if ! [ -x "$(command -v jq)" ]; then
  echo 'Error: jq is not installed. Download it here: https://stedolan.github.io/jq/' >&2
  exit 1
fi

source .env

cd terraform;

terraform init;

export TF_VAR_staging_ec2_id=$(terraform output staging_elb_target_group_attachment)
export TF_VAR_production_ec2_id=$(terraform output production_elb_target_group_attachment)

terraform apply;

blue_ec2_ip=$(terraform output blue_ec2_ip);
green_ec2_ip=$(terraform output green_ec2_ip);
vault_ec2_ip=$(terraform output vault_ec2_ip);
logstash_and_elastic_ec2_ip=$(terraform output logstash_and_elastic_ec2_ip);

production_elb_domain=$(terraform output production_elb_domain);
vault_host=$(terraform output vault_ec2_host);
logstash_and_elastic_host=$(terraform output logstash_and_elastic_ec2_host);

# Export the database credentials for placing in the template for db config
database_host=$(terraform output footprints_db_host)
database_name=$(terraform output footprints_db_name)
database_user=$(terraform output footprints_db_user)
database_pass=$(terraform output footprints_db_pass)
omniauth_client_id=$(terraform output omniauth_client_id)
omniauth_client_secret=$(terraform output omniauth_client_secret)

# Set up the Ansible hosts file to point to the EC2 instances created by
# the Terraform script
cat > ./../ansible/ansible_hosts << EOF
all:
  vars:
    database_host: $database_host
    database_name: $database_name
    database_user: $database_user
    database_pass: $database_pass
    omniauth_client_id: $omniauth_client_id
    omniauth_client_secret: $omniauth_client_secret
    vault_host: $vault_host
    logstash_and_elastic_host: $logstash_and_elastic_host

webservers:
  hosts:
    $blue_ec2_ip:
    $green_ec2_ip:

vault:
  hosts:
    $vault_ec2_ip

elastic_and_logstash:
  hosts:
    $logstash_and_elastic_ec2_ip

EOF

cd ./../ansible

export ANSIBLE_HOST_KEY_CHECKING=False;

ansible-playbook --private-key=~/.ssh/mongeese-footprints -i ansible_hosts webservers.yml;

run_vault=${RUN_VAULT:-0}

if [$run_vault == 1]; then
    ansible-playbook --private-key=~/.ssh/mongeese-footprints -i ansible_hosts vault.yml;
fi

ansible-playbook --private-key=~/.ssh/mongeese-footprints -i ansible_hosts elastic-and-logstash.yml;

#rm ./../ansible/ansible_hosts
